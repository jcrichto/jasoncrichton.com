---
import BaseLayout from '../layouts/BaseLayout.astro';

import ContactCTA from '../components/ContactCTA.astro';

---

<BaseLayout title="Contact | Jason Crichton" description="Contact Jason Crichton">
	<div class="stack gap-20">
		<main class="wrapper about">
			<h1>Contact</h1>
			<p>Interested in reaching out? Let's Connect!</p>

			<section>
				<form
					hidden
					name="contact"
					method="POST"
					data-netlify="true"
					netlify-honeypot="bot-field"
					data-netlify-recaptcha="true">
					<label><input type="text" name="name" /></label>
					<label> <input type="email" name="email" /></label>
					<label><textarea name="message"></textarea></label>
					<div data-netlify-recaptcha="true"></div>
				</form>
				<form
					x-data="{
								name : '',
								nameDirty: false,
								message: '',
								messageDirty: false,
								email: '',
								emailDirty: false,
							}"
					x-on:submit.prevent="
								nameDirty = true;
								emailDirty = true;
								messageDirty = true;
								submitMessage(name, email, message);"
					id="contact">
				<p hidden>
					<label>ignore: <input name="bot-field" /></label>
				</p>
				<input type="hidden" name="form-name" value="contact" />
				<p>
					<label>Full Name: <input x-model="name" x-on:blur="nameDirty = true" type="text" name="name" /></label>
				</p>
				<p x-show.transition="nameDirty && name.length == 0" style="color: red" x-cloak>
					Please fill out your full name.
				</p>
				<p>
					<label>Email: <input x-model="email" x-on:blur="emailDirty = true" type="email" name="email" /></label>
				</p>
				<p x-show.transition="emailDirty && !isEmail(email)" style="color: red" x-cloak>
					Please provide a valid email.
				</p>
				<p>
					<label>Message:
					<textarea x-model="message" x-on:blur="messageDirty = true" name="message"></textarea>
					</label>
				</p>
				<p x-show.transition="messageDirty && message.length == 0" style="color: red" x-cloak>
					Please fill out your Message.
				</p>
				<div data-netlify-recaptcha="true"></div>
				<p>
					<button type="submit">Send</button>
				</p>
				</form>

				<script src="https://platform.linkedin.com/badges/js/profile.js" async defer type="text/javascript"></script>
				<div class="badge-base LI-profile-badge" data-locale="en_US" data-size="medium" data-theme="light" data-type="VERTICAL" data-vanity="jason-crichton" data-version="v1"><a class="badge-base__link LI-simple-link" href="https://www.linkedin.com/in/jason-crichton?trk=profile-badge">Jason Crichton</a></div>
              

			</section>
		</main>

	</div>
</BaseLayout>


<script type="text/javascript">
function isEmail(value) {
	return new RegExp("^\\S+@\\S+[\\.][0-9a-z]+$").test(String(value).toLowerCase());
}

function submitMessage(name, email, message) {
	if (!name || name.length == 0 || !email || !isEmail || !message || message.length == 0) {
	return;
	}
	let formElement = document.getElementById("contact");
	let body = new URLSearchParams(new FormData(formElement)).toString();
	return fetch("/", {
	method: "POST",
	headers: {
		"Content-Type": "application/x-www-form-urlencoded",
	},
	body: body,
	})
	.then((response) => {
		if (response.ok) {
		formElement.reset();
		alert("Thank you for your message!");
		} else {
		throw new Error(`Something went wrong: ${response.statusText}`);
		}
	})
	.catch((error) => console.error(error));
}
</script>

<style>
	.about {
		display: flex;
		flex-direction: column;
		gap: 3.5rem;
	}

	img {
		margin-top: 1.5rem;
		border-radius: 1.5rem;
		box-shadow: var(--shadow-md);
	}

	section {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
		color: var(--gray-200);
	}

	.section-title {
		grid-column-start: 1;
		font-size: var(--text-xl);
		color: var(--gray-0);
	}

	.content {
		grid-column: 2 / 4;
	}

	.content :global(a) {
		text-decoration: 1px solid underline transparent;
		text-underline-offset: 0.25em;
		transition: text-decoration-color var(--theme-transition);
	}

	.content :global(a:hover),
	.content :global(a:focus) {
		text-decoration-color: currentColor;
	}

	@media (min-width: 50em) {
		.about {
			display: grid;
			grid-template-columns: 1fr 60% 1fr;
		}

		.about > :global(:first-child) {
			grid-column-start: 2;
		}

		section {
			display: contents;
			font-size: var(--text-lg);
		}
	}
</style>
