---
import { getCollection } from 'astro:content';

import { Icon } from 'astro-icon';

// Layout import — provides basic page elements: <head>, <nav>, <footer> etc.
import BaseLayout from '../layouts/BaseLayout.astro';

// Component Imports
import CallToAction from '../components/CallToAction.astro';
import Grid from '../components/Grid.astro';
import PortfolioPreview from '../components/PortfolioPreview.astro';

// Page section components
import ContactCTA from '../components/ContactCTA.astro';
import Skills from '../components/Skills.astro';

// Content Fetching: List four most recent work projects
const projects = (await getCollection('work'))
	.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
	.slice(0, 4);

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/
---

<BaseLayout>

<section class="hero">
	<div class="hero-content">
		<div class="greeting gradient-text">I ❤️ <span id="text"></span><span id="cursor"></span></div>
		<h1 class="overview">I am a creative technology leader with over two decades of marketing / IT experience in the e-commerce industry who is currently based in Chicago, Illinois.</h1>
	
		<div class="roles">
			<Icon name="ph:code" width="1.33em" /> Developer
			<Icon name="ph:pencil-line" size="1.33em" /> UI/UX Design
			<Icon name="ph:crown-bold" size="1.33em" /> Leader
			<Icon name="ph:shopping-bag" size="1.33em" /> E-commerce
		</div>
	</div>
</section>
	

	<div class="wrapper">
	<main>
		<Skills />
		<section class="section with-background with-cta">
			<header class="section-header stack gap-2 lg:gap-4">
				<h3>Selected Work</h3>
				<p>Take a look below at some of my featured work for clients from the past few years.</p>
			</header>

			<div class="gallery">
				<Grid variant="offset">
					{
						projects.map((project) => (
							<li>
								<PortfolioPreview project={project} />
							</li>
						))
					}
				</Grid>
			</div>

			<div class="cta">
				<CallToAction href="/work/">
					View All
					<Icon name="ph:arrow-right" width="1.2em" />
				</CallToAction>
			</div>
		</section>

		<section>
			<header>
				<h3>Awards</h3>
				<p>
					I have been fortunate to win a number of accolades throughout my career for various digital experiences.

					I’ve worked on lots of projects that have won awards throughout my career.  It's always and honor to work with a 
				</p>
			</header>

			<section class="awards">
				<Icon name="awards/aiga" />
				<Icon name="awards/davey-new" />
				<Icon name="awards/w3" />
				<Icon name="awards/web" />
				<Icon name="awards/webby" />
			</section>
			</div>
		</section>
	</main>

	<ContactCTA />
	</div>
</BaseLayout>

<style>
	.roles {
		display: none;
	}

	@media (min-width: 50em) {
		.roles {
			margin-top: 0.5rem;
			display: flex;
			gap: 0.5rem;
		}
	}

	/* ====================================================== */

	.section {
		display: grid;
		gap: 2rem;
	}

	.with-background {
		position: relative;
	}

	.awards {
		display: flex;
		flex-wrap: wrap;
		justify-content: center;
		gap: 4rem;
		padding: 4rem;
	}

	.awards svg {
			width: 100px;
			height: 100px;
	}

	.with-background::before {
		--hero-bg: var(--bg-image-subtle-2);

		content: '';
		position: absolute;
		pointer-events: none;
		left: 50%;
		width: 100vw;
		aspect-ratio: calc(2.25 / var(--bg-scale));
		top: 0;
		transform: translateY(-75%) translateX(-50%);
		background: url('/assets/backgrounds/noise.png') top center/220px repeat,
			var(--hero-bg) center center / var(--bg-gradient-size) no-repeat, var(--gray-999);
		background-blend-mode: overlay, normal, normal, normal;
		mix-blend-mode: var(--bg-blend-mode);
		z-index: -1;
	}

	.with-background.bg-variant::before {
		--hero-bg: var(--bg-image-subtle-1);
	}

	.section-header {
		justify-self: center;
		text-align: center;
		max-width: 50ch;
		font-size: var(--text-md);
		color: var(--gray-300);
	}

	.section-header h3 {
		font-size: var(--text-2xl);
	}


	.hero {
		height: 70dvh;
		background: url('./assets/hero-01.jpg') no-repeat;
		background-position: center bottom -100px;
		background-size: cover;
		/* position: fixed; */
		display: flex;
		width: 100%;
		padding-inline: 1.5rem;
	}

	.hero-content {
		margin-top: 5rem;
		width: 50%;
	}


	.greeting {
		/* font-size: var(--text-xl); */
		
		font-size: clamp(3rem, -0.875rem + 8.333vw, 5rem);
		font-family: var(--font-accent);
		color: var(--gray-0);
		line-height: 1.5;
	}

	.overview {
		font-size: clamp(1rem, -0.875rem + 8.333vw, 1rem);
		font-weight: 400; 
		font-family: var(--font-base);
	}

	@media (min-width: 50em) {
		.hero {
			background-position: bottom right;
			background-size: contain;
		}
	}


	@media (min-width: 50em) {
		.section {
			grid-template-columns: repeat(4, 1fr);
			grid-template-areas: 'header header header header' 'gallery gallery gallery gallery';
			gap: 5rem;
		}

		.section.with-cta {
			grid-template-areas: 'header header header cta' 'gallery gallery gallery gallery';
		}

		.section-header {
			grid-area: header;
			font-size: var(--text-lg);
		}

		.section-header h3 {
			font-size: var(--text-4xl);
		}

		.with-cta .section-header {
			justify-self: flex-start;
			text-align: left;
		}

		.gallery {
			grid-area: gallery;
		}

		.cta {
			grid-area: cta;
		}
	}

	/* ====================================================== */

	.mention-card {
		display: flex;
		height: 7rem;
		justify-content: center;
		align-items: center;
		text-align: center;
		border: 1px solid var(--gray-800);
		border-radius: 1.5rem;
		color: var(--gray-300);
		background: var(--gradient-subtle);
		box-shadow: var(--shadow-sm);
	}

	@media (min-width: 50em) {
		.mention-card {
			border-radius: 1.5rem;
			height: 9.5rem;
		}
	}


	#cursor {
		display: inline-block;
		vertical-align: middle;
		width: 3px;
		height: 50px;
		background-color: orange;
		animation: blink .75s step-end infinite;
	}

	@keyframes blink {
		from, to { 
			background-color: transparent 
		}
		50% { 
			background-color: orange; 
		}
	}
</style>

<script>
// List of sentences
var _CONTENT = [ 
	"Design.", 
	"Code.", 
	"Leading.",
	"Hamburgers."
];

// Current sentence being processed
var _PART = 0;

// Character number of the current sentence being processed 
var _PART_INDEX = 0;

// Holds the handle returned from setInterval
var _INTERVAL_VAL;

// Element that holds the text
var _ELEMENT = document.querySelector("#text");

// Cursor element 
var _CURSOR = document.querySelector("#cursor");

// Implements typing effect
function Type() { 
	// Get substring with 1 characater added
	var text =  _CONTENT[_PART].substring(0, _PART_INDEX + 1);
	_ELEMENT.innerHTML = text;
	_PART_INDEX++;

	// If full sentence has been displayed then start to delete the sentence after some time
	if(text === _CONTENT[_PART]) {
		// Hide the cursor
		_CURSOR.style.display = 'none';

		clearInterval(_INTERVAL_VAL);
		setTimeout(function() {
			_INTERVAL_VAL = setInterval(Delete, 50);
		}, 1000);
	}
}

// Implements deleting effect
function Delete() {
	// Get substring with 1 characater deleted
	var text =  _CONTENT[_PART].substring(0, _PART_INDEX - 1);
	_ELEMENT.innerHTML = text;
	_PART_INDEX--;

	// If sentence has been deleted then start to display the next sentence
	if(text === '') {
		clearInterval(_INTERVAL_VAL);

		// If current sentence was last then display the first one, else move to the next
		if(_PART == (_CONTENT.length - 1))
			_PART = 0;
		else
			_PART++;
		
		_PART_INDEX = 0;

		// Start to display the next sentence after some time
		setTimeout(function() {
			_CURSOR.style.display = 'inline-block';
			_INTERVAL_VAL = setInterval(Type, 100);
		}, 200);
	}
}

// Start the typing effect on load
_INTERVAL_VAL = setInterval(Type, 100);
</script>